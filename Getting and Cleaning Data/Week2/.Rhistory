library(swirl)
library(swirl)
library("swirl")
install.packages("swirl")
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
args(dir.create)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
bye()
exit()
?swirl()
?swirl
info()
bye()
add2 <- function(x, y)
{
x + y
}
add2(3,5)
add2(x,y)
swirl()
1:20
pi:30
pi:10
15:1
?':'
seq(1, 20)
seq(0, 10, .5)
seq(5, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- (0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("my", 'name',  'is')
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Dave Bucholtz")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
cube <- function(x, n){x^3}
cube(3)
cube(3,1)
x <- 1:10
if (x>5){x<-0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
d <- 3L
d
?parse
paste('test', '/', '002.csv')
paste('test', '/', '002.csv', collapse = '')
?paste
paste('test', '/', '002.csv', sep = '')
for (i in (c(1:10))){len(i)}
for (i in (c(1:10))){length(i)}
for (i in (c(1:10))){x<-length(i)}
for (i in (c(1:10))){x<-length(i) print(x)}
for (i in (c(1:10))){print(length(i))}
for (i in (c(1:200))){print(length(i))}
for (i in (c(1:200))){print(i)}
?str_pad
pollutantmean <- function(directory, pollutant, id) {
for (i in id)
{
filename <- paste(directory, '/', str_pad(i, 3, '0'), '.csv', sep = "")
print(filename)
}
}
pollutantmean <- function(directory, pollutant, id) {
for (i in id)
{
filename <- paste(directory, '/', str_pad(i, 3, '0'), '.csv', sep = "")
print(filename)
}
}
pollutantmean('test','test',1:10)
?str_pad
??str_pad
library(stringr)
pollutantmean('test','test',1:10)
?str_pad
library(httr)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R App",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("R App"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R App",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("R App"), myapp)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R App",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
install.packages("httpuv")
library(httpuv)
library(httr)
library(httpuv)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R App",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
oauth_endpoints("github")
myapp <- oauth_app("Getting_Cleaning_Data",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
req[,name == "datasharing"]
req[,"name" == "datasharing"]
head(req)
req
req[,names]
req[,name]
req
req[[name]]
jsondata <- fromJSON(req)
library(jsonlite)
fromJSON(raw)
fromJSON(req)
jsond <- toJSON(req)
?toJSON
req
req.toJSON()
toJSON(req)
library(jsonlite)
toJSON(req)
toJSON(req, force=TRUE)
req
head(req, 20)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
req
jsondata1 <- content(req)
json
jsondata1 <- content(req)
jsondata1
jsondata2 <- fromJSON(jsondata1)
jsondata2 <- fromJSON(toJSON(jsondata1))
jsondata2
jsondata2[,name="datasharing"]
jsondata2[,name == "datasharing"]
head (jsondata2)
View(jsondata2)
jsondata2[[,"name"]]
jsondata2[,"name"]
jsondata2[jsondata2["name" == "datasharing"]]
jsondata2["name"]
jsondata2["name" == "datasharing"]
jsondata2[, "name" == "datasharing"]
View(jsondata2)
View(jsondata2)
jsondata2[6,]
jsondata2[6,"created_at"]
jsondata2[,"created_at"]
jsondata2[,"created_at", "name" == 'datasharing']
jsondata2["name"]
jsondata2["name" == 'datasharing']
repodata <- jsondata2["name" == 'datasharing']
repodata
repodata <- jsondata2["name" == 'datasharing', "created_at"]
repodata
jsondata2[,"name" == "datasharing"["created_at"]]
jsondata2[,"name" == "datasharing", ["created_at"]]
jsondata2[,"name" == "datasharing", "created_at"]
jsondata2[,"name" == "datasharing"]
jsondata2[6, "name"]
jsondata2[6, "created_at", "name"]
jsondata2$created_at[jsondata2$name == "datasharing"]
library(httr)
library(httpuv)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("Getting_Cleaning_Data",
key = "1bf8dc667aa288b53643",
secret = "8b9c81a8c3854ac60b9d84a54b663e81f47880a9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
library(jsonlite)
jsondata1 <- content(req)
jsondata2 <- fromJSON(toJSON(jsondata1))
jsondata2$created_at[jsondata2$name == "datasharing"]
install.packages("sqldf")
?sqldf
?sqldf
??sqldf
library(sqldf)
?sqldf
setwd("Programming/R/Getting and Cleaning Data/Week2/")
filename <- "getdata-data-ss06pid.csv"
acs <- read.csv(filename)
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
sqldf("select distinct AGEP from acs")
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlData <- readLines(connection)
close(connection)
htmlData
nchar(htmlData[10,])
nchar(htmlData[10])
nchar(htmlData[10])
nchar(htmlData[20])
nchar(htmlData[30])
nchar(htmlData[100])
connection <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
htmlData <- readLines(connection)
close(connection)
connection <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
connection <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "curl")
connection <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "libcurl")
htmlData <- readLines(connection)
connection <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "libcurl")
htmlData <- readLines(connection)
close(connection)
connection <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "libcurl")
htmlData <- readLines(connection)
close(connection)
htmlData
read.fortran()
?read.fortran
data <- read.fortran(htmlData, skip = 3)
data <- read.fortran(htmlData, format = c(), skip = 3)
data <- read.fortran(htmlData, format = c())
data <- read.fortran(htmlData, format = c())
?read.fwf
data <- read.fwf(htmlData, skip = 3)
data <- read.fwf(htmlData, skip = 3, widths = c(16, 4, 4, 9, 4, 9, 4, 9, 4))
getwd()
setwd("/Users/dbucholt/Programming/R/Getting and Cleaning Data/Week2")
write(htmlData, "data.csv")
filename <- (data.csv)
filename <- "data.csv"
data <- read.fwf(filename, skip = 3, widths = c(16, 4, 4, 9, 4, 9, 4, 9, 4))
data
View(data)
data[1]
data[1,1]
data[2, ]
data[1,]
data <- read.fwf(filename, skip = 3, widths = c(16, 4, 4, 9, 4, 9, 4, 9, 4), header = TRUE)
filename <- "data.csv"
data <- read.fwf(filename, skip = 3, widths = c(16, 4, 4, 9, 4, 9, 4, 9, 4), header = TRUE)
data <- read.fwf(filename, skip = 3, widths = c(16, 4, 4, 9, 4, 9, 4, 9, 40), header = TRUE)
data <- read.fwf(filename, skip = 4, widths = c(16, 4, 4, 9, 4, 9, 4, 9, 4))
data[1,]
data <- read.fwf(filename, skip = 4, widths = c(15, 4, 4, 9, 4, 9, 4, 9, 4))
data[1,]
data$V1[1,]
data$V1
data[1254,]
data[1254,1]
data[1,1]
data[1]
data[1,]
data[,1]
data[,2]
sum(data[,4])
sum(data[,4]) + sum(data[,9])
sum(data[,4]) + sum(data[,9])sum(data[,4]) + sum(data[,9])
sum(data[,4]) + sum(data[,9])
sum(data[,4])
